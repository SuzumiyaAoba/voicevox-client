name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    env:
      ROLLUP_SKIP_NODEJS_NATIVE: '1'
      CI: 'true'
    
    strategy:
      matrix:
        node-version: [18, 20, 22]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Clean install
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Run linter
        run: npm run check
        
      - name: Run tests
        run: npm run test:run
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Build package
        run: npm run build:dual
        
      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Clean install
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Build package
        run: npm run build:dual
        
      - name: Check build artifacts
        run: |
          test -f dist/index.js || (echo "ESM build missing" && exit 1)
          test -f dist/index.d.ts || (echo "Type definitions missing" && exit 1)
          test -f dist/index.cjs || (echo "CJS build missing" && exit 1)
          
      - name: Test package installation
        run: |
          # Test package.json exports
          node -e "
            const pkg = require('./package.json');
            console.log('Package name:', pkg.name);
            console.log('Version:', pkg.version);
            console.log('Main:', pkg.main);
            console.log('Types:', pkg.types);
            console.log('Exports:', JSON.stringify(pkg.exports, null, 2));
          "
          
      - name: Validate package
        run: npm pack --dry-run

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Clean install
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Generate API types
        run: npm run generate
        
      - name: Run TypeScript type check
        run: npx tsc --noEmit
        
      - name: Run TypeScript type check for build
        run: npx tsc --project tsconfig.build.json --noEmit
