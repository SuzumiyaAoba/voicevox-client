{
  "name": "@suzumiyaaoba/voicevox-client",
  "version": "0.1.0",
  "description": "VOICEVOX API Client generated with orval",
  "type": "module",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    }
  },
  "files": [
    "dist"
  ],
  "private": false,
  "scripts": {
    "dev": "bun run --watch src/index.ts",
    "build": "tsc --project tsconfig.build.json",
    "build:dual": "npm run build && npm run build:cjs",
    "build:cjs": "tsc --project tsconfig.build.json --module commonjs --outDir dist-cjs && mv dist-cjs/index.js dist/index.cjs",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "generate": "orval --config ./orval.config.ts",
    "format": "bunx @biomejs/biome check --write .",
    "check": "bunx @biomejs/biome check .",
    "fix": "bun run format",
    "update-schema": "curl -s -o api-schema/openapi.json http://localhost:50021/openapi.json && echo 'OpenAPI schema updated from local server' && bun run generate",
    "voicevox:start": "docker-compose up -d voicevox",
    "voicevox:stop": "docker-compose down",
    "voicevox:logs": "docker-compose logs -f voicevox",
    "prepublishOnly": "npm run test:run && npm run build:dual",
    "prepare": "husky",
    "postinstall": "bun run generate"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.2.4",
    "@tsconfig/strictest": "^2.0.6",
    "@types/bun": "latest",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.1",
    "orval": "^7.12.2",
    "vite": "^7.1.7",
    "vitest": "^3.2.4"
  },
  "peerDependencies": {
    "typescript": "^5.9.2"
  },
  "keywords": [
    "voicevox",
    "api-client",
    "typescript",
    "orval"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "bunx @biomejs/biome check --write --no-errors-on-unmatched"
    ],
    "*.{json,md}": [
      "bunx @biomejs/biome format --write --no-errors-on-unmatched"
    ]
  }
}
